@using CM.Model.Dto
@inject GeneralStateProvider State

<AuthorizedView>
    <Authorized>
        <MudPaper Width="250px"
                  Class="py-3"
                  Elevation="0">
            <MudNavMenu>
                <MudText Typo="Typo.h6"
                         Class="pl-2 py-1">
                    Conference Manager
                </MudText>
                <MudDivider Class="my-2"/>
                <MudNavLink Href="/Inscriptions" Disabled="!_isInscriptionsOptionAllowed">Inscriptions</MudNavLink>
                <MudNavGroup Title="Administration" Disabled="!_isAdministrationAllowed">
                    <MudNavLink Href="/clubs" Disabled="!_isClubsOptionAllowed">Clubs</MudNavLink>
                    <MudNavLink Href="/members" Disabled="!_isMembersOptionAllowed">Members</MudNavLink>
                    <MudNavLink Href="/countries" Disabled="!_isCountriesOptionAllowed">Countries</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Security" Disabled="!_isSecurityAllowed">
                    <MudNavLink Href="/changePassword" Disabled="!_isChangePasswordOptionAllowed">Change Password</MudNavLink>
                    <MudNavLink Href="/users" Disabled="!_isUserOptionAllowed">Users</MudNavLink>
                    <MudNavLink Href="/roles" Disabled="!_isRolesOptionAllowed">Roles</MudNavLink>
                </MudNavGroup>
            </MudNavMenu>
        </MudPaper>
    </Authorized>
    <NotAuthorized>
        
    </NotAuthorized>
</AuthorizedView>

@code
{
    private bool _isInscriptionsOptionAllowed;
    private bool _isClubsOptionAllowed;
    private bool _isMembersOptionAllowed;
    private bool _isCountriesOptionAllowed;
    private bool _isChangePasswordOptionAllowed;
    private bool _isUserOptionAllowed;
    private bool _isRolesOptionAllowed;
    private bool _isAdministrationAllowed;
    private bool _isSecurityAllowed;
    private bool _isAdmin;

    protected override void OnInitialized()
    {
        // ToDo: Uncomment after Authentication is done

        var roles = new List<RoleDto>();
        
        //var roles = _state.Roles();
        //_isAdmin = roles?.Any(a=>a.Name.ToUpper() == "ADMIN") ?? false;

        _isAdmin = true;

        if (_isAdmin)
        {
            _isInscriptionsOptionAllowed = true;
            _isClubsOptionAllowed = true;
            _isMembersOptionAllowed = true;
            _isCountriesOptionAllowed = true;
            _isChangePasswordOptionAllowed = true;
            _isUserOptionAllowed = true;
            _isRolesOptionAllowed = true;
            _isAdmin = true;
        }
        else
        {
            _isInscriptionsOptionAllowed = false;
            _isClubsOptionAllowed = false;
            _isMembersOptionAllowed = false;
            _isCountriesOptionAllowed = false;
            _isChangePasswordOptionAllowed = false;
            _isUserOptionAllowed = false;
            _isRolesOptionAllowed = false;
            _isAdmin = false;
        }

        _isAdministrationAllowed = _isClubsOptionAllowed || _isMembersOptionAllowed || _isCountriesOptionAllowed;
        _isSecurityAllowed = _isChangePasswordOptionAllowed || _isUserOptionAllowed || _isRolesOptionAllowed;
    }
}
