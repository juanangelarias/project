@page "/"

@inject ISnackbar Snackbar;

<PageTitle>Index</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>
        <MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
        <MudText Typo="Typo.h6">Hello, @context.User.Identity.Name</MudText>
        <MudAlert Severity="Severity.Normal">
            You can find documentation and examples on our website here:
            <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit">
                <b>www.mudblazor.com</b>
            </MudLink>
        </MudAlert>        
    </Authorized>
    <NotAuthorized>
        <MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
        <MudText Typo="Typo.h6">Hello, guest!</MudText>
        <MudAlert Severity="Severity.Normal">
            You can find documentation and examples on our website here:
            <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit">
                <b>www.mudblazor.com</b>
            </MudLink>
        </MudAlert>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView>
    <Authorized>
        <br/>
        <br/>
        <MudButton ButtonType="ButtonType.Button"
                   Variant="Variant.Outlined"
                   Color="Color.Primary"
                   OnClick="DisplayGreeting">
            Display Greeting
        </MudButton>
    </Authorized>
    <NotAuthorized></NotAuthorized>
</AuthorizeView>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private async Task DisplayGreeting()
    {
        var authState = await authenticationState;

        var message = $"Hello {authState?.User?.Identity?.Name ?? "ERROR"}";

        Snackbar.Add(message, Severity.Info);
    }
}
