@page "/login"
@using CM.Model.General
@using Microsoft.AspNetCore.Components.Authorization

@layout LoginLayout

@inject IUserService UserService
@inject IGeneralStateProvider State
@inject AuthenticationStateProvider Authentication
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudGrid Justify="Justify.Center">
    <MudItem xs="6"> @*sm="4" md="3">*@
        <EditForm Model="@_model"
                  OnValidSubmit="OnValidSubmit"
                  OnInvalidSubmit="OnInvalidSubmit">
            <DataAnnotationsValidator/>
            <MudCard Outlined="true" 
                     Elevation="7">
                <MudCardHeader Style="justify-content: center; background-color: #0B409C;">
                    <MudImage Src="resources/logot.png" Style="width: 150px; height: 150px;"/>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid Justify="Justify.Center">
                        <MudItem xs="12">
                            <MudTextField Label="Username"
                                          Class="mt-3"
                                          Variant="Variant.Filled"
                                          @bind-value="_model.UserName"
                                          For="@(()=>_model.UserName)"/>
                        </MudItem>
                        <MudItem xs="12">
                            <MudTextField Label="Password"
                                          InputType="InputType.Password"
                                          Class="mt-3"
                                          Variant="Variant.Filled"
                                          @bind-value="_model.Password"
                                          For="@(()=>_model.Password)"/>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               Class="ml-auto">
                        Submit
                    </MudButton>
                </MudCardActions>
            </MudCard>
            
            @if (!_success)
            {
                <MudItem xs="4">
                    <MudPaper Class="pa-4 mud-height-full">
                        <MudText Typo="Typo.subtitle2">
                            Validation Summary
                        </MudText>
                        <MudText Color="@Color.Error">
                            <ValidationSummary/>
                        </MudText>
                    </MudPaper>
                </MudItem>
            }
        </EditForm>
    </MudItem>
</MudGrid>

@code {
    private readonly LoginData _model = new();
    private bool _success = true;

    protected override void OnInitialized()
    {
        // ToDo: To be removed

        _model.UserName = "arias@ariasmunguia.com";
        _model.Password = "Delfos02!!";
        
        StateHasChanged();
    }

    private async Task OnValidSubmit(EditContext context)
    {
        var response = await UserService.Login(_model);
        if (response != null && !string.IsNullOrEmpty(response.Token))
        {
            State.SetLocalStorage(response);

            var customAuthStateProvider = (ApiAuthenticationStateProvider) Authentication;
            await customAuthStateProvider.UpdateAuthenticationState(response.User);

            _success = true;
                
            Navigation.NavigateTo("/");
        }
        else
        {
            Snackbar.Add("Username or password are invalid", Severity.Error);
            _success = false;
        }
    }
    
    private void OnInvalidSubmit()
    {
        _success = false;
        StateHasChanged();
    }
}