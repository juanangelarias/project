@inject NavigationManager _navigation
@inject IGeneralStateProvider _generalState

<AuthorizedView>
    <Authorized>
        <MudButton ButtonType="ButtonType.Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="Logout">
            Logout
        </MudButton>
    </Authorized>
    <NotAuthorized>
        <MudButton ButtonType="ButtonType.Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="Login">
            Login
        </MudButton>
    </NotAuthorized>
</AuthorizedView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    
    private AuthenticationState? _authState;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _authState = await authenticationState;
    }

    private void Login()
    {
        _navigation.NavigateTo("/login");
    }
    
    private void Logout()
    {
        
        _generalState.Logout();
        _navigation.NavigateTo("/login");
    }
}